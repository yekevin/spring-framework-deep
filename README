1.Core Container
核心容器由spring-core，spring-beans，spring-context，spring-context-support和spring-expression（Spring Expression Language）组成。
    1.1 spring-core和spring-beans模块提供了框架的基本部分，包括IoC和依赖注入功能。
        BeanFactory是工厂模式的复杂实现。 它消除了对编程单例的需要，并允许您将依赖关系的配置和规范与实际程序逻辑分离。

    1.2 上下文（spring-context）模块建立在由spring-core 和 spring-beans模块提供的实体基础上，它是以类似于JNDI注册表的框架式方式访问对象的一种手段。
        上下文模块从Beans模块继承其功能，并增加了对国际化的支持（例如使用资源束），事件传播，资源加载以及例如Servlet容器透明创建上下文。
        Context模块还支持Java EE功能，如EJB，JMX和基本远程处理。 ApplicationContext接口是Context模块的焦点。
        spring-context-support将常见的第三方库集成到Spring应用程序上下文缓存（EhCache，Guava，JCache），邮件（JavaMail），调度（CommonJ，Quartz）和模板引擎（FreeMarker，JasperReports，Velocity） 。

    1.3 spring-expression模块提供了强大的表达式语言，用于在运行时查询和处理对象图。 它是JSP 2.1规范中规定的统一表达语言（统一EL）的扩展。
        该语言支持设置和获取属性值，属性分配，方法调用，访问数组，集合和索引器的内容，逻辑和算术运算符，命名变量以及从Spring的IoC容器中以名称检索对象。
        它还支持列表投影和选择以及常见列表聚合。

2.AOP and Instrumentation
    2.1 spring-aop模块提供了一个符合AOP联盟的面向方面的编程实现，允许您定义方法拦截器和切入点，以清理实现应该分离的功能的代码。
        使用源级元数据功能，您还可以以类似于.NET属性的方式将行为信息合并到代码中。

    2.2 spring-aspects模块提供了对AspectJ的集成

    2.3 spring-instrumentation模块提供了在某些应用服务器中使用的类仪表支持和类加载器实现。 spring-instrument-tomcat模块包含Spring的Tomcat测试代理。

3.Message
    3.1 Spring Framework 4包括一个Spring消息传递模块，其中包含来自Spring Integration项目（如Message，MessageChannel，MessageHandler等）的关键摘要，
    作为基于消息的应用程序的基础。 该模块还包括一组用于将消息映射到方法的注释，类似于基于Spring MVC注释的编程模型。

4.Data Access/Integration
    4.1 数据访问/集成层由JDBC，ORM，OXM，JMS和事务模块组成。

    4.2 spring-jdbc模块提供了一个JDBC抽象层，不需要进行繁琐的JDBC编码和解析数据库供应商特定的错误代码。

    4.3 spring-tx模块支持用于实现特殊接口和所有POJO（普通Java对象）的类的编程和声明式事务管理。

    4.4 spring-orm模块为流行的对象关系映射API提供集成层，包括JPA，JDO和Hibernate。使用spring-orm模块，您可以将所有这些O / R映射框架与Spring提供的所有其他功能结合使用，例如前面提到的简单的声明性事务管理功能。

    4.5 spring-oxm模块提供了一个支持Object / XML映射实现的抽象层，如JAXB，Castor，XMLBeans，JiBX和XStream。

    4.6 spring-jms模块（Java Messaging Service）包含用于生成和使用消息的功能。自Spring Framework 4.1以来，它提供了与spring-message模块的集成。

5.Web
    5.1 Web层由spring-web，spring-webmvc，spring-websocket和spring-webmvc-portlet模块组成。

    5.2 spring-web模块提供基本的面向Web的集成功能，例如多部分文件上传功能，以及使用Servlet侦听器和面向Web的应用程序上下文初始化IoC容器。 它还包含一个HTTP客户端和Spring的远程支持的Web相关部分。

    5.3 spring-webmvc模块（也称为Web-Servlet模块）包含用于Web应用程序的Spring的模型视图控制器（MVC）和REST Web Services实现。 Spring的MVC框架提供了领域模型代码和Web表单之间的清晰分离，并与Spring Framework的所有其他功能集成。

    5.4 spring-webmvc-portlet模块（也称为Web-Portlet模块）提供了在Portlet环境中使用的MVC实现，并且反映了spring-webmvc模块的功能。

6.Test
    6.1 spring-test模块支持使用JUnit或TestNG对Spring组件进行单元测试和集成测试。 它提供了Spring ApplicationContexts的一致加载和这些上下文的缓存。 它还提供可用于孤立测试代码的模拟对象。